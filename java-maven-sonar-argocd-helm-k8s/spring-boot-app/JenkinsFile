pipeline {
  agent any

  environment {
    DOCKER_IMAGE = "channamma/happyapp:${env.BUILD_NUMBER}"
    REGISTRY_CREDENTIALS = credentials('docker-cred')
    GIT_REPO_NAME = "devops"
    GIT_USER_NAME = "channammarani586"
  }

  stages {
    stage('Checkout') {
      steps {
        echo 'Checking out source code...'
        git branch: 'main', url: 'https://github.com/channammarani586/devops.git'
      }
    }

    stage('Build and Test') {
      steps {
        sh '''
          set -x
          ls -ltr
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package
        '''
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          sh '''
            set -x
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
          '''
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            dockerImage.push()
          }
        }
      }
    }

    stage('Validate YAML') {
      steps {
        sh '''
          set -x
          yamllint java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
        '''
      }
    }

    stage('Deploy') {
      steps {
        sh '''
          set -x
          kubectl apply -f java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
        '''
      }
    }
  }
}
