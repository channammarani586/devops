pipeline {
  agent any

  environment {
    DOCKER_IMAGE = "channamma/happyapp:${env.BUILD_NUMBER}"
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'feature2', credentialsId: 'github-cred', url: 'https://github.com/channammarani586/devops.git'
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh 'mvn clean package'
          withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
            sh '''
              docker build -t ${DOCKER_IMAGE} .
              echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
              docker push ${DOCKER_IMAGE}
            '''
          }
        }
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        sh '''
          sed -i "s|image: channamma/happyapp:.*|image: ${DOCKER_IMAGE}|" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
          kubectl apply -f java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/
        '''
      }
    }
  }
}
