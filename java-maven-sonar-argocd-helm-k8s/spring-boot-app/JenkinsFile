pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "channamma/happyapp:4"
        GIT_REPO_NAME = "devops"
        GIT_USER_NAME = "channammarani586"
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    echo "üîÑ Checking out repository..."
                    git branch: 'main', url: "https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git"
                }
            }
        }

        stage('Pull Docker Image') {
            steps {
                script {
                    echo "üê≥ Pulling latest Docker image..."
                    sh """
                        if ! docker pull ${DOCKER_IMAGE}; then
                            echo '‚ö†Ô∏è Failed to pull Docker image, proceeding with the build...'
                        fi
                    """
                }
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    script {
                        echo "üì¶ Building and pushing Docker image..."
                        sh """
                            docker build -t ${DOCKER_IMAGE} .
                            echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
                            docker push ${DOCKER_IMAGE}
                        """
                    }
                }
            }
        }

        stage('Update Kubernetes Deployment') {
            steps {
                withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
                    script {
                        echo "üîß Updating Kubernetes deployment file..."
                        sh """
                            git config --global user.email "sbiradarchannamma@gmail.com"
                            git config --global user.name "${GIT_USER_NAME}"

                            sed -i "s|image: channamma/happyapp:.*|image: ${DOCKER_IMAGE}|g" /home/nginx-deployment.yaml
                            
                            git add /home/nginx-deployment.yaml
                            git commit -m "üîÑ Updated deployment image to ${DOCKER_IMAGE}"
                            git push https://${GIT_USER_NAME}:${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main || echo "‚ö†Ô∏è Git push failed!"
                        """
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    echo "üöÄ Deploying to Kubernetes..."
                    sh """
                        if ! command -v kubectl &> /dev/null; then
                            echo "‚ùå kubectl not found! Please install and configure it."
                            exit 1
                        fi

                        kubectl apply -f /home/nginx-deployment.yaml || echo "‚ö†Ô∏è Deployment failed!"
                        kubectl apply -f /home/nginx-service.yaml || echo "‚ö†Ô∏è Service deployment failed!"
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs() // Clears workspace before the next build
        }
    }
}
