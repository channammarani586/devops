pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "channamma/happyapp:${BUILD_NUMBER}"
        KUBE_CONFIG = '/root/.kube/config'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', credentialsId: 'GITHUB', url: 'https://github.com/channammarani586/devops.git'
            }
        }

        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    script {
                        sh '''
                            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                            docker build -t ${DOCKER_IMAGE} .
                            echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
                            docker push ${DOCKER_IMAGE}
                        '''
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh '''
                        export KUBECONFIG=${KUBE_CONFIG}
                        kubectl apply -f /home/maste/Desktop/deployment.yaml -n test
                    '''
                }
            }
        }

        stage('Update Deployment File in Git') {
            steps {
                withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config --global user.email "sbiradarchannamma@gmail.com"
                        git config --global user.name "channammarani586"
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add -A
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/channammarani586/devops HEAD:main
                    '''
                }
            }
        }
    }
}
