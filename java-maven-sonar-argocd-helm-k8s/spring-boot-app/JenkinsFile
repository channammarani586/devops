pipeline {
    agent any

    environment {
        DOCKER_CRED = credentials('docker-cred') // Docker Hub credentials
        GITHUB_CRED = credentials('github') // GitHub credentials
        GITHUB_TOKEN = credentials('github-token') // GitHub token
        DOCKER_IMAGE = "channamma/happyapp:4"
        WORK_DIR = "/home"
        GIT_REPO_NAME = "devops"
        GIT_USER_NAME = "channammarani586"
    }

    stages {
        stage('Checkout Repository') {
            steps {
                script {
                    echo "üîÑ Checking out repository..."
                    git branch: 'main', url: "https://${GITHUB_CRED}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git"
                }
            }
        }

        stage('Pull Docker Image') {
            steps {
                script {
                    echo "üê≥ Pulling latest Docker image..."
                    sh """
                        docker pull ${DOCKER_IMAGE} || echo '‚ö†Ô∏è Failed to pull Docker image, proceeding with the build...'
                    """
                }
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                script {
                    echo "üì¶ Building and pushing Docker image..."
                    sh """
                        docker build --build-arg JDK_VERSION=17 -t ${DOCKER_IMAGE} -f ${WORK_DIR}/Dockerfile .
                        echo "$DOCKER_CRED_PSW" | docker login -u "$DOCKER_CRED_USR" --password-stdin
                        docker push ${DOCKER_IMAGE}
                    """
                }
            }
        }

        stage('Update Kubernetes Deployment') {
            steps {
                withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
                    script {
                        echo "üîß Updating Kubernetes deployment file..."
                        sh """
                            git config --global user.email "sbiradarchannamma@gmail.com"
                            git config --global user.name "${GIT_USER_NAME}"

                            sed -i "s|image: nginx:latest|image: ${DOCKER_IMAGE}|g" ${WORK_DIR}/nginx-deployment.yaml
                            git add ${WORK_DIR}/nginx-deployment.yaml

                            git commit -m "üîÑ Updated deployment image to ${DOCKER_IMAGE}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main || echo "‚ö†Ô∏è Git push failed!"
                        """
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    echo "üöÄ Deploying to Kubernetes..."
                    sh """
                        kubectl apply -f ${WORK_DIR}/nginx-deployment.yaml || echo "‚ö†Ô∏è Deployment failed!"
                        kubectl apply -f ${WORK_DIR}/nginx-service.yaml || echo "‚ö†Ô∏è Service deployment failed!"
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs() // Clears workspace before the next build
        }
    }
}
