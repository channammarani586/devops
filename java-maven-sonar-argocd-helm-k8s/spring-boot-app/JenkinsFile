pipeline {
  agent any

  environment {
    DOCKER_IMAGE = "channamma/happyapp:${env.BUILD_NUMBER}"
    REGISTRY_CREDENTIALS = credentials('docker-cred')
    GIT_REPO_NAME = "devops"
    GIT_USER_NAME = "channammarani586"
  }

  stages {
    stage('Checkout') {
      steps {
        echo '🔄 Checking out source code...'
        git branch: 'main', url: 'https://github.com/channammarani586/devops.git'
      }
    }

    stage('Build and Test') {
      steps {
        sh '''
          set -e
          echo "📂 Listing project files..."
          ls -ltr
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          echo "⚙ Running Maven build..."
          mvn clean package
        '''
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          sh '''
            set -e
            echo "🐳 Checking if Docker is available..."
            docker version || { echo "❌ Docker not found!"; exit 1; }

            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            echo "🔨 Building Docker image: ${DOCKER_IMAGE}"
            docker build --no-cache -t ${DOCKER_IMAGE} .

            echo "🔑 Logging in to Docker Hub..."
            echo "${REGISTRY_CREDENTIALS_PSW}" | docker login -u "${REGISTRY_CREDENTIALS_USR}" --password-stdin

            echo "🚀 Pushing Docker image to registry..."
            docker push ${DOCKER_IMAGE} || { echo "❌ Docker push failed!"; exit 1; }
          '''
        }
      }
    }

    stage('Update Deployment YAML') {
      steps {
        sh '''
          set -e
          echo "✏ Updating deployment YAML with new image tag..."
          sed -i "s|replaceImageTag|${DOCKER_IMAGE}|g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

          echo "📄 Updated Deployment YAML:"
          cat java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
        '''
      }
    }

    stage('Validate YAML') {
      steps {
        sh '''
          set -e
          echo "📋 Validating YAML syntax with yamllint..."
          if ! command -v yamllint &> /dev/null; then
            echo "🔧 Installing yamllint..."
            sudo apt update && sudo apt install -y yamllint || sudo yum install -y yamllint
          fi
          yamllint java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml || exit 1
        '''
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        sh '''
          set -e
          echo "🚀 Deploying to Kubernetes..."
          kubectl apply -f java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml || exit 1
        '''
      }
    }
  }

  post {
    success {
      echo "🎉 Deployment Successful!"
    }
    failure {
      echo "❌ Deployment Failed. Check logs."
    }
    always {
      echo "🧹 Cleaning up workspace..."
      cleanWs()
    }
  }
}
