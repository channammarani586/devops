pipeline {
  agent any  // Use any available Jenkins agent

  environment {
    DOCKER_IMAGE = "channamma/happyapp:${BUILD_NUMBER}"
    DOCKER_CREDENTIALS = credentials('docker-cred')
    GIT_REPO_NAME = "devops"
    GIT_USER_NAME = "channammarani586"
  }

  stages {
    stage('Checkout') {
      steps {
        sh 'echo Checkout Step Passed'
        git branch: 'main', url: 'https://github.com/channammarani586/devops.git'
      }
    }

    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          sh '''
            echo "Logging in to DockerHub..."
            echo "$DOCKER_CREDENTIALS_PSW" | docker login -u "$DOCKER_CREDENTIALS_USR" --password-stdin

            echo "Building and pushing Docker image..."
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
            docker push ${DOCKER_IMAGE}

            echo "Docker logout"
            docker logout
          '''
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config --global user.email "sbiradarchannamma@gmail.com"
            git config --global user.name "channammarani586"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" /home/nginx-deployment.yaml
            git add /home/nginx-deployment.yaml /home/nginx-service.yaml  # Ensure both files are committed
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        script {
          sh '''
            echo "Deploying application to Kubernetes..."
            kubectl apply -f /home/nginx-deployment.yaml
            kubectl apply -f /home/nginx-service.yaml
          '''
        }
      }
    }
  }
}
